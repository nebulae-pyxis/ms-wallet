
version: 2
jobs:
  prepare:
    working_directory: ~/nebulae/
    docker:
      - image: circleci/node:9.9.0
        command: bash
        user: circleci
    steps:
      - checkout:
          path: ~/nebulae/repo
      - persist_to_workspace:
          root: ~/nebulae
          paths:
            - repo
# msname => wallet
# frontendid => emi
# apiid => emi-gateway
# git_project => nebulae-pyxis
# backendname => wallet
# project_context_uc => PYXIS
# ################ FRONT END ################

  build-frontend:
    working_directory: ~/nebulae/
    docker:
      - image: circleci/node:9.9.0
        command: bash
    steps:
      - attach_workspace:
          at: ~/nebulae
      - run:
          name: Register Micro-FrontEnd + Compose UI
          command: |            
            source ~/nebulae/repo/.circleci/scripts/gitChanged.sh
            cd ~/nebulae/repo/            
            gitChanged frontend || echo $GCP_SERVICE_ACCOUNT_PROD | base64 --decode --ignore-garbage > /tmp/gcloud-service-key.json
            gitChanged frontend || npm config set prefix '~/.npm-global'
            gitChanged frontend || export PATH=~/.npm-global/bin:$PATH
            gitChanged frontend || source ~/.profile
            gitChanged frontend || npm install -g @nebulae/cli
            gitChanged frontend || npm install -g @angular/cli
            gitChanged frontend || nebulae register microfrontend --microservice-id=wallet --frontend-id=emi --setup-file=/home/circleci/nebulae/repo/etc/mfe-setup.json --store-type=GCP_DATASTORE --gcp-service-account-token=/tmp/gcloud-service-key.json            
            gitChanged frontend || nebulae compose-ui production --shell-type=FUSE2_ANGULAR --shell-repo=https://github.com/nebulae-pyxis/emi.git --frontend-id=emi --output-dir=/home/circleci/nebulae/frontend/emi/ --store-type=GCP_DATASTORE --gcp-service-account-token=/tmp/gcloud-service-key.json
            gitChanged frontend || ls /home/circleci/nebulae/frontend/emi/           
      - run:
          name: Download SHELL Repository
          command: |
            source ~/nebulae/repo/.circleci/scripts/gitChanged.sh
            cd ~/nebulae/repo/
            mkdir -p ~/nebulae/frontend/shell 
            gitChanged frontend || ( git clone --depth=1 https://github.com/nebulae-pyxis/emi ~/nebulae/frontend/shell )      
      - run:
          name: commit & push package-lock.json changes
          command: |
            source ~/nebulae/repo/.circleci/scripts/gitChanged.sh
            cd ~/nebulae/repo/
            gitChanged frontend || cp /home/circleci/nebulae/frontend/emi/package-lock.json ~/nebulae/frontend/shell/frontend/emi/package-lock.json                        
            gitChanged frontend || ( cd ~/nebulae/frontend/shell && gitPublishPackageLockChanges "$GITHUB_USER_EMAIL" "$GITHUB_USER_NAME" "$GITHUB_PERSONAL_ACCESS_TOKEN" "nebulae-pyxis/emi" "master" && cd ~/nebulae/repo/)
      - setup_remote_docker
      - run:
          name: Build docker image and push it to hub
          command: |
            source ~/nebulae/repo/.circleci/scripts/gitChanged.sh
            cd ~/nebulae/repo/            
            gitChanged frontend || ls ~/nebulae/frontend/emi/dist/ 
            gitChanged frontend || export DOCKERHUB_IMAGE=emi
            gitChanged frontend || export FRONTEND_SHELL_PATH=~/nebulae/frontend/emi
            gitChanged frontend || ( cd ~/nebulae/frontend/shell && sh deployment/docker/build-docker-hub.sh && cd ~/nebulae/repo/ )
            gitChanged frontend || echo $DOCKERHUB_NAMESPACE/$DOCKERHUB_IMAGE@$(docker pull $DOCKERHUB_NAMESPACE/$DOCKERHUB_IMAGE:latest | grep sha256 | cut -c 9-) > ~/nebulae/frontend/DOCKERHUB_GENERATED_IMAGE_DIGEST
      - persist_to_workspace:
          root: ~/nebulae/
          paths:
            - frontend
            
# ################ API ################

  build-api:    
    working_directory: ~/nebulae/
    docker:
      - image: circleci/node:10.12
        command: bash
    steps:
      - attach_workspace:
          at: ~/nebulae
      - run:
          name: Installing NebulaE cli & Compose API
          command: |    
            source ~/nebulae/repo/.circleci/scripts/gitChanged.sh
            cd ~/nebulae/repo/            
            gitChanged api/emi-gateway || echo $GCP_SERVICE_ACCOUNT_PROD | base64 --decode --ignore-garbage > /tmp/gcloud-service-key.json
            gitChanged api/emi-gateway || npm config set prefix '~/.npm-global'
            gitChanged api/emi-gateway || export PATH=~/.npm-global/bin:$PATH
            gitChanged api/emi-gateway || source ~/.profile
            gitChanged api/emi-gateway || npm install -g @nebulae/cli
            gitChanged api/emi-gateway || nebulae register microapi --microservice-id=wallet --api-id=emi-gateway --setup-file=/home/circleci/nebulae/repo/etc/emi-mapi-setup.json --store-type=GCP_DATASTORE --gcp-service-account-token=/tmp/gcloud-service-key.json            
            gitChanged api/emi-gateway || nebulae compose-api production --api-type=NEBULAE_GATEWAY --api-repo=https://github.com/nebulae-pyxis/emi-gateway.git --api-id=emi-gateway --output-dir=/home/circleci/nebulae/api/emi-gateway/ --store-type=GCP_DATASTORE --gcp-service-account-token=/tmp/gcloud-service-key.json      
            gitChanged api/emi-gateway || ls /home/circleci/nebulae/api/emi-gateway/

      - run:
          name: Installing NebulaE cli & Compose Sales Gateway API
          command: |    
            source ~/nebulae/repo/.circleci/scripts/gitChanged.sh
            cd ~/nebulae/repo/            
            gitChanged api/sales-gateway || echo $GCP_SERVICE_ACCOUNT_PROD | base64 --decode --ignore-garbage > /tmp/gcloud-service-key.json
            gitChanged api/sales-gateway || npm config set prefix '~/.npm-global'
            gitChanged api/sales-gateway || export PATH=~/.npm-global/bin:$PATH
            gitChanged api/sales-gateway || source ~/.profile
            gitChanged api/sales-gateway || npm install -g @nebulae/cli
            gitChanged api/sales-gateway || nebulae register microapi --microservice-id=wallet --api-id=sales-gateway --setup-file=/home/circleci/nebulae/repo/etc/sales-mapi-setup.json --store-type=GCP_DATASTORE --gcp-service-account-token=/tmp/gcloud-service-key.json            
            gitChanged api/sales-gateway || nebulae compose-api production --api-type=NEBULAE_GATEWAY --api-repo=https://github.com/nebulae-pyxis/sales-gateway.git --api-id=sales-gateway --output-dir=/home/circleci/nebulae/api/sales-gateway/ --store-type=GCP_DATASTORE --gcp-service-account-token=/tmp/gcloud-service-key.json      
            gitChanged api/sales-gateway || ls /home/circleci/nebulae/api/sales-gateway/
      - setup_remote_docker
      - run:
          name: Build docker image (emi-gateway) and push it to hub
          command: | 
            source ~/nebulae/repo/.circleci/scripts/gitChanged.sh
            cd ~/nebulae/repo/
            mkdir -p ~/nebulae/api
            gitChanged api/emi-gateway || ( cd  ~/nebulae/api/ && git clone --depth=1 https://github.com/nebulae-pyxis/emi-gateway  ~/nebulae/api/shell )      
            gitChanged api/emi-gateway || ls ~/nebulae/api/shell
            gitChanged api/emi-gateway || export DOCKERHUB_IMAGE=emigateway
            gitChanged api/emi-gateway || export API_SHELL_PATH=/home/circleci/nebulae/api/
            gitChanged api/emi-gateway || ( cd ~/nebulae/api/shell && sh ~/nebulae/api/shell/deployment/docker/build-docker-hub.sh  && cd ~/nebulae/repo/ )
            gitChanged api/emi-gateway || echo $DOCKERHUB_NAMESPACE/$DOCKERHUB_IMAGE@$(docker pull $DOCKERHUB_NAMESPACE/$DOCKERHUB_IMAGE:latest | grep sha256 | cut -c 9-) > ~/nebulae/api/DOCKERHUB_GENERATED_IMAGE_DIGEST
            
      - run:
          name: Build docker image (sales-gateway) and push it to hub
          command: | 
            source ~/nebulae/repo/.circleci/scripts/gitChanged.sh
            cd ~/nebulae/repo/
            mkdir -p ~/nebulae/api
            gitChanged api/sales-gateway || ( cd  ~/nebulae/api/ && git clone --depth=1 https://github.com/nebulae-pyxis/sales-gateway  ~/nebulae/api/shell/sales-gateway )      
            gitChanged api/sales-gateway || export DOCKERHUB_IMAGE=salesgateway
            gitChanged api/sales-gateway || export API_SHELL_PATH=/home/circleci/nebulae/api/
            gitChanged api/sales-gateway || ( cd ~/nebulae/api/shell/sales-gateway && sh ~/nebulae/api/shell/sales-gateway/deployment/docker/build-docker-hub.sh  && cd ~/nebulae/repo/ )
            gitChanged api/sales-gateway || echo $DOCKERHUB_NAMESPACE/$DOCKERHUB_IMAGE@$(docker pull $DOCKERHUB_NAMESPACE/$DOCKERHUB_IMAGE:latest | grep sha256 | cut -c 9-) > ~/nebulae/api/sales-gateway/DOCKERHUB_GENERATED_IMAGE_DIGEST

      - persist_to_workspace:
          root: ~/nebulae/
          paths:
            - api 

# ################ MBINIT ################ 
            
  build-mbinit:    
    working_directory: ~/nebulae/
    docker:
      - image: golang:1.9-alpine
        command: sh
    steps:
      - attach_workspace:
          at: ~/nebulae
      - run:
          name: Build mbinit
          command: |
            mkdir ~/nebulae/go
            apk add --no-cache git
            go get github.com/dumacp/mbinit
            go install github.com/dumacp/mbinit
            cp /go/bin/mbinit ~/nebulae/go/
      - persist_to_workspace:
          root: ~/nebulae/
          paths:
            - go


# ################ BACK END ################ 
            
  build-backend:    
    working_directory: ~/nebulae/
    docker:
      - image: circleci/node:9.9.0
        command: bash
    steps:
      - attach_workspace:
          at: ~/nebulae
      - setup_remote_docker      
      - run:
          name: Build docker image for wallet
          command: |
            source ~/nebulae/repo/.circleci/scripts/gitChanged.sh
            cd ~/nebulae/repo/
            mkdir ~/nebulae/backend
            cp ~/nebulae/go/mbinit ~/nebulae/repo/backend/wallet/
            export DOCKERHUB_IMAGE=wallet.backend.wallet
            export DOCKERHUB_TAG=0.0.18
            gitChanged backend/wallet || docker build  -t $DOCKERHUB_NAMESPACE/$DOCKERHUB_IMAGE:$DOCKERHUB_TAG -t $DOCKERHUB_NAMESPACE/$DOCKERHUB_IMAGE:latest ~/nebulae/repo/backend/wallet/
            gitChanged backend/wallet || docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PASS
            gitChanged backend/wallet || docker push $DOCKERHUB_NAMESPACE/$DOCKERHUB_IMAGE:$DOCKERHUB_TAG
            gitChanged backend/wallet || docker push $DOCKERHUB_NAMESPACE/$DOCKERHUB_IMAGE:latest      
      - persist_to_workspace:
          root: ~/nebulae/
          paths:
            - backend

# ################ DEPLOYMENT ################ 

  deploy-prod:
      working_directory: ~/nebulae/
      docker:
        - image: google/cloud-sdk:latest
      steps:
        - attach_workspace:
            at: ~/nebulae
        - run:
            name: Setup gcloud & kubectl
            command: |
              ls -a ~/nebulae
              echo $GCP_SERVICE_ACCOUNT_PROD | base64 --decode --ignore-garbage > /root/gcloud-service-key.json
              gcloud auth activate-service-account --key-file /root/gcloud-service-key.json            
              gcloud --quiet config set project $GKE_PROJECT_PROD
              gcloud --quiet config set compute/zone $GKE_ZONE_PROD
              gcloud --quiet container clusters get-credentials $GKE_CLUSTER
        - run:
            name: Deploy emi FrontEnd
            command: |
              (ls ~/nebulae/frontend/DOCKERHUB_GENERATED_IMAGE_DIGEST && echo docker image DIGEST to set $(< ~/nebulae/frontend/DOCKERHUB_GENERATED_IMAGE_DIGEST) ) || echo frontend not found
              (ls ~/nebulae/frontend/DOCKERHUB_GENERATED_IMAGE_DIGEST && kubectl set image deployment/frontend-emi frontend-emi=$(< ~/nebulae/frontend/DOCKERHUB_GENERATED_IMAGE_DIGEST) ) || echo frontend not found
        - run:
            name: Deploy emi-gateway API
            command: |
              (ls ~/nebulae/api/DOCKERHUB_GENERATED_IMAGE_DIGEST && echo docker image DIGEST to set $(< ~/nebulae/api/DOCKERHUB_GENERATED_IMAGE_DIGEST) ) || echo api not found
              (ls ~/nebulae/api/DOCKERHUB_GENERATED_IMAGE_DIGEST && kubectl set image deployment/api-emi-gateway api-emi-gateway=$(< ~/nebulae/api/DOCKERHUB_GENERATED_IMAGE_DIGEST) ) || echo api not found
        - run:
            name: Deploy BackEnds 
            command: |
              kubectl apply -f ~/nebulae/repo/deployment/gke/              



workflows: 
  version: 2
  build-and-deploy:
    jobs:
      - prepare:
          context: PYXIS
      - build-frontend:
          context: PYXIS
          requires:
            - prepare
      - build-api:
          context: PYXIS
          requires:
            - prepare
      - build-mbinit:
          context: PYXIS
          requires:
            - prepare
      - build-backend:
          context: PYXIS
          requires:
            - prepare
            - build-mbinit      
      - deploy-prod:
          context: PYXIS
          requires:
            - build-frontend
            - build-api
            - build-backend